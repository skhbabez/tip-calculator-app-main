@font-face {
  font-family: "Space Mono";
  font-style: normal;
  font-weight: 700;
  src: local("Space Mono"), url("fonts/SpaceMono-Bold.ttf") format("truetype");
}

*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

img {
  max-inline-size: 100%;
  display: block;
}

:root {
  --font-base: "Space Mono", sans-serif;
  --font-weight-bold: 700;
  --grey-50: hsl(189, 47%, 97%);
  --grey-200: hsl(185, 41%, 84%);
  --grey-300: hsl(184, 19%, 68%);
  --grey-400: hsl(184, 14%, 56%);
  --grey-500: hsl(186, 14%, 43%);
  --grey-550: hsl(180, 18%, 40%);
  --grey-600: hsl(180, 25%, 32%);
  --green-200: hsl(185, 41%, 84%);
  --green-400: hsl(172, 67%, 45%);
  --green-750: hsl(183, 79%, 24%);
  --green-800: hsl(183, 85%, 21%);
  --green-900: hsl(183, 100%, 15%);
  --orange-400: hsl(13, 70%, 60%);
  --space-8: 0.5rem;
  --space-16: 1rem;
  --space-24: 1.5rem;
  --space-32: 2rem;
  --space-40: 2.5rem;
  --space-48: 3rem;
  --font-step-0: 0.8125rem;
  --font-step-1: 1rem;
  --font-step-2: 1.25rem;
  --font-step-3: 1.5rem;
  --font-step-4: 2rem;
  --font-step-5: 3rem;
  --font-mt-32-48: clamp(2rem, 1.0458rem + 4.0712vw, 3rem);
  --space-mt-24-32: clamp(1.5rem, 1.0229rem + 2.0356vw, 2rem);
  --space-mt-32-48: clamp(2rem, 1.0458rem + 4.0712vw, 3rem);
  --space-mt-24-80: clamp(1.5rem, -1.8397rem + 14.2494vw, 5rem);
  --space-mt-32-40: clamp(2rem, 1.5229rem + 2.0356vw, 2.5rem);
  --space-mt-32-24: clamp(1.5rem, 2.4771rem + -2.0356vw, 2rem);
}

body {
  font-family: var(--font-base);
  font-weight: var(--font-weight-bold);
  line-height: 1.5;
  background-color: var(--grey-200);
  min-block-size: 100dvh;
}

header {
  padding-block-start: 50px;
  padding-block-end: 40px;
}
& h1 {
  text-transform: uppercase;
  letter-spacing: 0.6ch;
  line-height: 1.5;
  color: var(--grey-600);
  text-align: center;
}

fieldset {
  border: none;
}

:is(input, button):hover {
  cursor: pointer;
}

.btn {
  user-select: none;
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
  border: none;
  border-radius: 8px;
  padding-block: var(--space-8);
  outline: none;
  text-transform: uppercase;
  transition: background-color 100ms ease-in-out;
}

.btn-reset {
  background-color: var(--green-400);
  color: var(--green-900);

  font-size: var(--font-step-2);
  &:focus-visible {
    outline: var(--green-400) solid 1px;
    box-shadow: 0px 0px 5px 3px var(--green-400);
  }
  &:hover,
  &:focus-visible {
    background-color: var(--green-200);
  }
  &:disabled {
    color: var(--green-800);
    background-color: var(--green-750);
  }
}

.btn-check {
  background-color: var(--green-900);
  color: white;
  text-align: center;
  position: relative;
  display: inline-block;
  font-size: var(--font-step-3);
  & input {
    opacity: 0;
    position: absolute;
  }

  &:has(input:focus-visible) {
    outline: var(--green-900) solid 1px;
    box-shadow: 0px 0px 5px 3px var(--green-900);
  }
  &:has(input:hover),
  &:has(input:focus-visible) {
    background-color: var(--green-200);
    color: var(--green-900);
    cursor: pointer;
  }
  &:has(input:checked) {
    color: var(--green-900);
    background-color: var(--green-400);
  }
}

.control {
  font-family: inherit;
  line-height: inherit;
  font-weight: inherit;
  background-color: var(--grey-50);
  outline: none;
  border: none;
  padding-block: var(--space-8);
  border-radius: 8px;
  &.outline-success {
    outline: solid 2px var(--green-400);
  }

  &.outline-error {
    outline: solid 2px var(--orange-400);
  }
}

.input-custom {
  color: var(--grey-550);
  font-size: var(--font-step-3);
  text-align: center;
}

.input-label {
  color: var(--grey-500);
}

.input-number {
  & label {
    display: flex;
    justify-content: space-between;

    & p:last-of-type {
      color: var(--orange-400);
    }
  }
  & input {
    inline-size: 100%;
    margin-block-start: var(--space-8);
    background-color: var(--grey-50); /*why cant I remove this*/
    color: var(--green-900);
    padding-inline: var(--space-16);
    font-size: var(--font-step-3);
    text-align: end;
    &::placeholder {
      color: var(--grey-300);
    }
  }
}

.dollar {
  background: url("images/icon-dollar.svg") no-repeat 16px 50%;
}
.person {
  background: url("images/icon-person.svg") no-repeat 16px 50%;
}

.amounts {
  display: flex;
  flex-direction: column;
  gap: var(--space-24);
}

.amount {
  inline-size: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.amount-label {
  & p:first-of-type {
    color: white;
  }
  & p:last-of-type {
    font-size: var(--font-step-0);
    color: var(--grey-400);
    &::before {
      content: "/ ";
    }
  }
}

.amount-value {
  font-size: var(--font-mt-32-48);
  color: var(--green-400);
  &::before {
    content: "$";
  }
}

.results-container {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: var(--green-900);
  padding-inline: var(--space-mt-24-32);
  padding-block: var(--space-24);
  border-radius: 15px;
  gap: var(--space-32);
}

.calculator {
  margin: 0 auto;
  border-radius: 25px;
  max-inline-size: 38rem;
  background-color: white;
  padding-block: var(--space-mt-32-48);
  padding-inline: var(--space-mt-24-80);
  display: grid;
  gap: var(--space-mt-32-40);
  box-shadow: 0px 32px 43px 5px #4fa6af;
  & form {
    display: flex;
    flex-direction: column;
    gap: var(--space-mt-32-24);
  }
}

.btn-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(7rem, 1fr));
  gap: var(--space-16);
  margin-top: var(--space-8);
}

@media (min-width: 768px) {
  .results-container {
    gap: var(--space-16);
  }
  .amounts {
    gap: var(--space-8);
  }
}

@media (min-width: 1280px) {
  .calculator {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    min-width: 57.5rem;
    padding: var(--space-32);
    gap: var(--space-48);
    & form {
      padding-block: var(--space-16);
      gap: var(--space-40);
    }
  }

  .results-container {
    padding-bottom: 38px;
    padding-top: 37px;
  }
  .amounts {
    gap: var(--space-24);
  }
}
